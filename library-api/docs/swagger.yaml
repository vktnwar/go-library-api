basePath: /
definitions:
  models.Author:
    properties:
      bio:
        type: string
      books:
        items:
          $ref: '#/definitions/models.Book'
        type: array
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Book:
    properties:
      author_ids:
        items:
          type: integer
        type: array
      authors:
        items:
          $ref: '#/definitions/models.Author'
        type: array
      available:
        type: boolean
      created_at:
        type: string
      id:
        type: integer
      isbn:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Loan:
    properties:
      book:
        $ref: '#/definitions/models.Book'
      book_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      loan_date:
        type: string
      return_date:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API para gerenciar livros, autores e empréstimos
  title: Library API
  version: "1.0"
paths:
  /authors:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Author'
            type: array
      summary: Lista todos os autores
      tags:
      - authors
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados do autor
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/models.Author'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Author'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria um novo autor
      tags:
      - authors
  /authors/{id}:
    delete:
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove um autor
      tags:
      - authors
    get:
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Author'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca um autor pelo ID
      tags:
      - authors
    put:
      consumes:
      - application/json
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      - description: Dados atualizados
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/models.Author'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Author'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualiza um autor
      tags:
      - authors
  /books:
    get:
      description: Retorna a lista completa de livros cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: Lista todos os livros
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Cria um livro com título, ISBN e autores opcionais
      parameters:
      - description: Dados do livro
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria um novo livro
      tags:
      - books
  /books/{id}:
    delete:
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove um livro
      tags:
      - books
    get:
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca um livro pelo ID
      tags:
      - books
    put:
      consumes:
      - application/json
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Dados atualizados
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualiza um livro existente
      tags:
      - books
  /loans:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Loan'
            type: array
      summary: Lista todos os empréstimos
      tags:
      - loans
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados do empréstimo
        in: body
        name: loan
        required: true
        schema:
          $ref: '#/definitions/models.Loan'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Loan'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria um novo empréstimo
      tags:
      - loans
  /loans/{id}:
    delete:
      parameters:
      - description: Loan ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove um empréstimo
      tags:
      - loans
    get:
      parameters:
      - description: Loan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Loan'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca um empréstimo pelo ID
      tags:
      - loans
  /loans/{id}/return:
    put:
      consumes:
      - application/json
      parameters:
      - description: Loan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Loan'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Marca um empréstimo como devolvido
      tags:
      - loans
swagger: "2.0"
